; config.ini

; N.B.: use ';' for commenting a line!


; core libs are automatically imported by using: 
; import config 
[CORE_LIB_PATHS]  
g2o=thirdparty/g2opy/lib
pangolin=thirdparty/pangolin
orb_features=thirdparty/orbslam2_features/lib
pyslam_utils=cpp/utils/lib
; considering the folders in thirdparty as modules
thirdparty=thirdparty   



; the following libs are explicitely imported on demand by using, for instance:
; import config \ config.cfg.set_lib('tfeat') 
[LIB_PATHS]
superpoint=thirdparty/superpoint
hardnet=thirdparty/hardnet
tfeat=thirdparty/tfeat
geodesc=thirdparty/geodesc
sosnet=thirdparty/SOSNet/codes 
l2net=thirdparty/l2net
l2net_keras=thirdparty/l2net_keras/src 
logpolar=thirdparty/logpolar
d2net=thirdparty/d2net 
delf=thirdparty/tensorflow_models/research/delf,thirdparty/tensorflow_models/research/slim,thirdparty/tensorflow_models/research/
contextdesc=thirdparty/contextdesc
lfnet=thirdparty/lfnet
r2d2=thirdparty/r2d2
keynet=thirdparty/keynet
disk=thirdparty/disk
torch-dimcheck=thirdparty/disk/submodules/torch-dimcheck
torch-localize=thirdparty/disk/submodules/torch-localize
unets=thirdparty/disk/submodules/unets
loftr=thirdparty/LoFTR-MedicalData

[DATASET]
; select your dataset (decomment only one of the following lines!) 
; type=KITTI_DATASET
;type=TUM_DATASET
; type=VIDEO_DATASET
;type=FOLDER_DATASET
;type=LIVE_DATASET
; type=COLON_DATASET
type=LUNG_DATASET
; type=ENDOR_DATASET
; type=ENDORSLAM_DATASET

[ENDOR_DATASET]
type=endor 
base_path=/home/dj/git/pyslam/data_prepare/endors/processed
name=000
cam_settings=settings/endor.yaml
is_color=True 
groundtruth_file=auto

[ENDORSLAM_DATASET]
type=lung 
base_path=/home/dj/Downloads/endoSLAM/vo/vo/LowCam
name=Colon-IV_3
cam_settings=settings/endorSLAM.yaml
is_color=True 
groundtruth_file=auto



[LUNG_DATASET]
type=lung 
; type=thermal
; base_path=/home/dj/git/pyslam/data_prepare/lung/vo
base_path=/home/dj/git/pyslam/data_prepare/lung_all
; name=029
name=thermal
tag=real
; cam_settings=settings/lung.yaml
; cam_settings=settings/new_lung.yaml
cam_settings=settings/thermal.yaml
is_color=True 
groundtruth_file=auto

[COLON_DATASET]
type=colon 
base_path=/home/dj/git/pyslam/data_prepare/colon/SyntheticColon_I/Train/processed
name=09
cam_settings=settings/colon.yaml
is_color=True 
groundtruth_file=auto


[KITTI_DATASET]
type=kitti 
base_path=/home/luigi/Work/rgbd_datasets2/kitti_color/dataset
;
;name=00
;cam_settings=settings/KITTI00-02.yaml
;
name=06
cam_settings=settings/KITTI04-12.yaml
is_color=True 
groundtruth_file=auto


[TUM_DATASET]
type=tum
base_path=/home/luigi/Work/rgbd_datasets
name=rgbd_dataset_freiburg1_xyz
cam_settings=settings/TUM1.yaml
associations=associations.txt
groundtruth_file=auto


[VIDEO_DATASET]
type=video
;
;base_path=./videos/kitti00
;cam_settings=settings/KITTI00-02.yaml
;name=video.mp4
;
base_path=./videos/kitti06
cam_settings=settings/KITTI04-12.yaml
name=video_color.mp4
;
;base_path=./videos/webcam
;cam_settings=settings/WEBCAM.yaml 
;name=video.mp4
;
groundtruth_file=groundtruth.txt


[FOLDER_DATASET]
type=folder 
base_path=/home/luigi/Work/rgbd_datasets2/kitti/dataset/sequences/00/image_0/
; name is used for specifying a glob pattern, e.g. *png, *jpeg, etc...
name=*png  
cam_settings=settings/KITTI00-02.yaml
groundtruth_file=groundtruth.txt
fps=20 


; DO NOT USE [LIVE_DATASET]! This is here since it may be useful in the future. 
; At the present time (see the README file):
; - main_vo.py cannot be used with your webcam since it requires a grountruth for recovering a correct inter-frame scale (see the README file) 
; - main_slam.py does NOT have REAL-TIME processing capabilities!
; If you want to use your webcam, please, record a video by using calibration/save_video.py and then use it as a VIDEO_DATASET
[LIVE_DATASET] 
type=live 
base_path=
name=/dev/video2
cam_settings=settings/WEBCAM.yaml 
groundtruth_file=auto


